---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/passwords":
    post:
      summary: Create password reset token
      tags:
      - Authentication
      parameters:
      - name: email
        in: query
        description: User email
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
    put:
      summary: Update password
      tags:
      - Authentication
      parameters:
      - name: token
        in: query
        description: Password reset token received in the email
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: New password
        required: true
        schema:
          type: string
      - name: password_confirmation
        in: query
        description: Password confirmation
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      country:
                        type: object
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      role:
                        type: string
                      last_sign_in_at:
                        type: string
                  meta:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password
                  required:
                  - email
                  - password
  "/api/v1/auth/sign_out":
    delete:
      summary: Sign out
      tags:
      - Authentication
      security:
      - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  "/api/v1/users":
    get:
      summary: List users
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: role
        in: query
        description: A query string to filter users by role
        required: false
        schema:
          type: string
      - name: q
        in: query
        description: A query string to search users by first name, last name, or phone
          number
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: How many records per page
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        country:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                        role:
                          type: string
                        last_sign_in_at:
                          type: string
                  meta:
                    type: object
                    properties:
                      total_pages:
                        type: integer
                      page_number:
                        type: integer
                      max_per_page:
                        type: integer
                      total_resources:
                        type: integer
    post:
      summary: Create user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      country:
                        type: object
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      role:
                        type: string
                      last_sign_in_at:
                        type: string
                  meta:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    phone_number:
                      type: string
                    country:
                      type: string
                      example: CO
                    role:
                      type: string
              required:
              - first_name
              - last_name
              - email
              - password
              - phone_number
              - country
              - role
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show user
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      country:
                        type: object
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      role:
                        type: string
                      last_sign_in_at:
                        type: string
                  meta:
                    type: object
    put:
      summary: Update user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      country:
                        type: object
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      role:
                        type: string
                      last_sign_in_at:
                        type: string
                  meta:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    phone_number:
                      type: string
                    country:
                      type: object
                      properties:
                        code:
                          type: string
                        name:
                          type: string
                    role:
                      type: string
              required:
              - first_name
              - last_name
              - email
              - password
              - phone_number
              - country
              - role
    delete:
      summary: Delete user
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
servers:
- url: http://{localHost}
  variables:
    localHost:
      default: localhost:3000
- url: https://{stagingHost}
  variables:
    stagingHost:
      default: staging-api.simeonfcc.com
- url: https://{uatHost}
  variables:
    uatHost:
      default: uat-api.simeonfcc.com
